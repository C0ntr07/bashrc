#---------------------------------------------------------------
# Global bashrc File
# $Id$
#---------------------------------------------------------------

if [ "`basename \`echo $SHELL\``" == "bash" ]
then
 
#
# CVS Host and Path
#
CVS_HOSTPATH=cvs.talonline.ca:/var/cvs


# Gets the cvs version of the bashrc file
BASHRCVERSION="`echo '$Revision$' | \
		    awk '{ print $2 }'`"
export BASHRCVERSION


#---------------------------------------------------------------
# Determine Machine Hostname
#---------------------------------------------------------------

HOSTNAME="`hostname | awk -F'.' '{ print $1 }'`"


#---------------------------------------------------------------
# Determine Machine Operating System Tag
#---------------------------------------------------------------

OS="`uname -s`"


#---------------------------------------------------------------
# Define Default System Paths
#---------------------------------------------------------------

# Determines the machine OS to perform OS-dependant stuff
case "$OS" in
SunOS)		# Solaris dependant stuff
	case "`uname -r`" in
	"5.10")
		ADMINPATH=""
		if [ -d "/usr/gnu/sbin" ]; then
			ADMINPATH="$ADMINPATH:/usr/gnu/sbin"
		fi
		if [ -d "/usr/local/sbin" ]; then
			ADMINPATH="$ADMINPATH:/usr/local/sbin"
		fi
		if [ -d "/usr/platform/`uname -i`/sbin"]; then
			ADMINPATH=$ADMINPATH:/usr/platform/`uname -i`/sbin
		fi
		ADMINPATH="$ADMINPATH:/sbin:/usr/sbin"

		PATH="$ADMINPATH"
		PATH="$PATH:/usr/gnu/bin:/usr/local/bin:/bin:/usr/bin"
		PATH="$PATH:/usr/ccs/bin:/usr/openwin/bin/usr/dt/bin"
		if [ -d "/opt/sun/bin" ]; then
			PATH="$PATH:/opt/sun/bin"
		fi
		PATH="$PATH:/opt/SUNWvts/bin"

		MANPATH="$MANPATH"
		MANPATH="$MANPATH:/usr/gnu/man:/usr/local/man"
		MANPATH="$MANPATH:/usr/man:/usr/share/man:/opt/SUNWvts/man"

		ID=/usr/xpg4/bin/id
		;;
	esac
	;;
Darwin)		# Mac OS X dependant stuff
	# Set the PATH based on original /etc/profile from 
	# 10.3.6 on 2004/11/22.
	PATH="/bin:/sbin:/usr/local/bin:/usr/bin:/usr/sbin"
	MANPATH="$MANPATH"
	ID=/usr/bin/id
	;;

OpenBSD)	# OpenBSD dependant stuff
	# Set a base PATH for all users
	PATH="/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin"
	MANPATH="$MANPATH"
	ID=/usr/bin/id

	# If user is not root (uid=0), then expand the PATH
	if [ "`$ID -ur`" -ne "0" -a -d "/usr/X11R6/bin" ]
	then
		PATH="$PATH:/usr/X11R6/bin"
	fi
	;;

esac # uname -s

# If a $HOME/bin directory exists, add it to the PATH
if [ -d "$HOME/bin" ]
then
	PATH="$PATH:$HOME/bin"
fi

# If a $HOME/man directory exists, add it to the MANPATH
if [ -d "$HOME/man" ]
then
	MANPATH="$MANPATH:$HOME/man"
fi

export PATH MANPATH


#---------------------------------------------------------------
# Set Global Environment Variables
#---------------------------------------------------------------

# Set CVS variables
export CVS_RSH=`which ssh`
export CVSROOT=":ext:${LOGNAME}@${CVS_HOSTPATH}"

# Set the default editor
export EDITOR=/usr/bin/vi
export VISUAL=/usr/bin/vi


#---------------------------------------------------------------
# Functions
#---------------------------------------------------------------

#
# xbold: Puts all of the positional parameters, seen as a 
# single word in bold.
#
xbold()
{
	case "$TERM" in
	*term | rxvt)
		echo -e "\033[1m$*\033[0m"
		;;

	*)
		;;

	esac # TERM
}

#
# xtitle: Puts all of the positional parameters, seen as a 
# single word into the xterm title bar.
#
xtitle()
{
	case "$TERM" in
	*term | rxvt)
		echo -n -e "\033]0;$*\007"
		;;

	*)
		;;

	esac # TERM
}

#
# prompthost: 
#
prompthost()
{
	local default="m"
	local b_default="1m"

	local black="0;30m"
	local red="0;31m"
	local green="0;32m"
	local brown="0;33m"
	local blue="0;34m"
	local purple="0;35m"
	local cyan="0;36m"
	local lightgray="0;37m"

	local b_black="1;30m"
	local b_red="1;31m"
	local b_green="1;32m"
	local b_brown="1;33m"
	local b_blue="1;34m"
	local b_purple="1;35m"
	local b_cyan="1;36m"
	local b_lightgray="1;37m"

	case "$HOSTNAME" in
	*)
		local color=$brown
		;;

	esac

	echo -n "$color"
}

#
# psg: performs an egrep on the process list
#
psg()
{
	case "$OS" in
	Darwin|OpenBSD)
		ps wwwaux | egrep $@
		;;
	SunOS)
		ps -ef | egrep $@
		;;
	esac
}

#---------------------------------------------------------------
# Interactive shell (prompt,history) settings
#---------------------------------------------------------------

# Skip the following if this is not an interactive shell
if [ "$PS1" -a "$LOGNAME" ]
then
	# Number of commands to remember in the command history
	export HISTSIZE=1000

	# The number of lines contained in the history file
	export HISTFILESIZE=100000

	# Ignore commands starting with a space, duplicates,
	# and a few others.
	export HISTIGNORE="[ ]*:&:bg:fg:ls -l:ls -al:ls -la:ll:la"

	# Sets a default prompt. The \[..\] strings are to bold the
	# prompt text.
	if [ "`$ID -ur`" -eq "0" ]
	then
		# If the user is root, display a # in the shell
		case "$TERM" in
		*term | rxvt)
			PS1="\[\033[41;1m\]\u@\h:\w#\[\033[0m\] "
			PS2="\[\033[41;1m\]#\[\033[0m\] "
			;;

		*)
			PS1="\u@\h:\w# "
			PS2="# "
			;;
		esac # TERM
	else
		# Display a normal prompt for non-root users
		case "$TERM" in
		*term | rxvt)
			PS1="\[\033[`prompthost`\]\u@\h:\w>\[\033[0m\] "
			PS2="\[\033[`prompthost`\]>\[\033[0m\] "
			;;

		*)
			PS1="\u@\h:\w> "
			PS2="> "
			;;
		esac # TERM
	fi

	unset prompthost

	case $TERM in
	xterm*)		# If TERM is an xterm, then add titlebar info
		if [ "`$ID -ur`" -eq "0" ]
		then
			# If the user is root, display a # in 
			# the titlebar
			PS1="\[\033]0;#\h#\w\007\]${PS1}"
		else
			PS1="\[\033]0;\h:\w\007\]${PS1}"
		fi
		;;

	*)
		;;

	esac # TERM

	export IGNOREEOF=10

	shopt -s checkwinsize
	shopt -s histappend

	# Echo the version and date of the profile
	echo "bashrc v${BASHRCVERSION} (`
	     echo '$Date$' | \
	     awk '{ print $2" "$3 }'
	     `)"
	echo

fi # PS -a LOGNAME


#---------------------------------------------------------------
# Set Aliases (Commonly Used Shortcuts)
#---------------------------------------------------------------

alias ll='ls -l'
alias la='ls -al'
alias lm='ll | less'

case "`uname -s`" in
CYGWIN_*)	# Windows Cygwin dependant stuff
	# Cygwin does not support proper su
	;;

*)		# All other platforms
	# Simulate a full login when using su
	alias su='su -l'
	;;

esac # uname -s

# If pine is installed, eliminated the .pine-debugX files
if [ -e "/usr/local/bin/pine" ]
then
	alias pine="pine -d 0"
fi

# If system is Darwin (Mac), add the super alias to properly
# become root with bash and environment settings
if [ "$OS" == "Darwin" ]
then
	alias super="sudo -s -H"
fi

fi # $SHELL == bash
